server:
  port: 8081
  servlet:
    context-path: /user-service
  shutdown: graceful

spring:
  application:
    name: user-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  config:
    import:
      - optional:nacos:${spring.application.name}-${spring.profiles.active}.yml
  main:
    allow-bean-definition-overriding: true

  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/mall_user?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:root}
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,slf4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
#      password: ${REDIS_PASSWORD:}
      database: 0
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  # 消息队列配置
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: /
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 1
        retry:
          enabled: true
          initial-interval: 3000ms
          max-attempts: 3

  cloud:
    # Nacos配置
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
        namespace: ${NACOS_NAMESPACE:dev}
        group: DEFAULT_GROUP
        metadata:
          version: 1.0.0
          region: default

    # Sentinel配置
    sentinel:
      transport:
        dashboard: ${SENTINEL_DASHBOARD:localhost:8080}
        port: 8719
      datasource:
        flow:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: ${NACOS_NAMESPACE:dev}
            dataId: ${spring.application.name}-flow-rules
            groupId: SENTINEL_GROUP
            rule-type: flow
        degrade:
          nacos:
            server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
            namespace: ${NACOS_NAMESPACE:dev}
            dataId: ${spring.application.name}-degrade-rules
            groupId: SENTINEL_GROUP
            rule-type: degrade

# Dubbo配置
dubbo:
  application:
    name: ${spring.application.name}
    qos-enable: false
    qos-port: 22222
  registry:
    address: nacos://${NACOS_SERVER_ADDR:localhost:8848}
    parameters:
      namespace: ${NACOS_NAMESPACE:dev}
  protocol:
    name: dubbo
    port: ${DUBBO_PORT:20881}
    threads: 200
  consumer:
    check: false
    timeout: 3000
    retries: 2
  provider:
    timeout: 3000
    retries: 2
    threads: 200
    threadpool: fixed
  scan:
    base-packages: com.mall.user.provider

# MyBatis-Plus配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.mall.user.entity
  global-config:
    db-config:
      id-type: ASSIGN_ID
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# Seata配置
seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: ${spring.application.name}-group
  service:
    vgroup-mapping:
      user-service-group: default
  registry:
    type: nacos
    nacos:
      application: seata-server
      server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
      namespace: ${NACOS_NAMESPACE:dev}
      group: SEATA_GROUP

# Sa-Token配置
sa-token:
  token-name: Authorization
  timeout: 2592000
  active-timeout: -1
  is-concurrent: true
  is-share: false
  token-style: uuid
  is-log: false

# Feign配置
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: BASIC
      user-service:
        connectTimeout: 3000
        readTimeout: 3000
        loggerLevel: FULL
      order-service:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: BASIC
      payment-service:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: BASIC
      product-service:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: BASIC
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true
  sentinel:
    enabled: true
  hystrix:
    enabled: false
  okhttp:
    enabled: false
  httpclient:
    enabled: true

# Actuator监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}

# Knife4j API文档配置
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
  packages-to-scan: com.mall.user.controller
  paths-to-match: /**

knife4j:
  enable: true
  setting:
    language: zh-CN
  documents:
    - group: 用户服务
      name: 用户接口
      locations: classpath:api-docs/*.json

# 日志配置
logging:
  level:
    com.mall.user: DEBUG
    com.mall.common: DEBUG
    org.springframework.web: INFO
    com.alibaba.nacos: INFO
    org.apache.dubbo: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/${spring.application.name}/${spring.application.name}.log
    max-size: 100MB
    max-history: 30

# 自定义配置
app:
  jwt:
    secret: ${JWT_SECRET:mall-platform-secret-key-2024}
    expire: 7200
  sms:
    enabled: ${SMS_ENABLED:false}
    provider: aliyun
  upload:
    path: ${UPLOAD_PATH:/data/upload}
    max-size: 10MB
    allowed-types: jpg,jpeg,png,gif,pdf