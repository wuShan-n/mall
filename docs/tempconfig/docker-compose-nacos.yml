version: '3.8'

services:
  # Nacos 注册中心和配置中心
  nacos-server:
    image: nacos/nacos-server:v2.4.3
    container_name: nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=nacos
      - MYSQL_SERVICE_PASSWORD=nacos
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      - JVM_XMS=512m
      - JVM_XMX=512m
      - JVM_XMN=256m
    volumes:
      - ./nacos/logs:/home/nacos/logs
      - ./nacos/data:/home/nacos/data
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    depends_on:
      - mysql
    restart: always
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: nacos-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=nacos
      - MYSQL_PASSWORD=nacos
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    restart: always
    networks:
      - mall-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: mall-redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    restart: always
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # RabbitMQ 消息队列
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: mall-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"    # AMQP端口
      - "15672:15672"  # 管理界面端口
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
      - ./rabbitmq/logs:/var/log/rabbitmq
    restart: always
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Elasticsearch 搜索引擎
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: mall-elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elasticsearch/plugins:/usr/share/elasticsearch/plugins
      - ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/logs:/usr/share/elasticsearch/logs
    restart: always
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana 可视化工具
  kibana:
    image: kibana:8.11.0
    container_name: mall-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - I18N_LOCALE=zh-CN
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: always
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MinIO 对象存储
  minio:
    image: minio/minio:latest
    container_name: mall-minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    ports:
      - "9000:9000"    # API端口
      - "9001:9001"    # Console端口
    volumes:
      - ./minio/data:/data
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - mall-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Sentinel Dashboard 流控面板
  sentinel-dashboard:
    image: bladex/sentinel-dashboard:1.8.6
    container_name: mall-sentinel
    ports:
      - "8858:8858"
    environment:
      - JVM_OPTS=-Dserver.port=8858 -Dcsp.sentinel.dashboard.server=localhost:8858 -Dproject.name=sentinel-dashboard
    restart: always
    networks:
      - mall-network

  # Seata Server 分布式事务
  seata-server:
    image: seataio/seata-server:2.0.0
    container_name: mall-seata
    ports:
      - "8091:8091"
    environment:
      #宿主机Ip
      SEATA_IP: 0.0.0.0
      # 引导 Seata 使用 Nacos 作为配置中心
      STORE_MODE: db
      SEATA_CONFIG_TYPE: nacos
      SEATA_CONFIG_NACOS_SERVER_ADDR: nacos-server:8848
      SEATA_CONFIG_NACOS_GROUP: SEATA_GROUP
      SEATA_CONFIG_NACOS_DATA_ID: seata.properties

      # 引导 Seata 使用 Nacos 作为注册中心
      SEATA_REGISTRY_TYPE: nacos
      SEATA_REGISTRY_NACOS_SERVER_ADDR: nacos-server:8848
      SEATA_REGISTRY_NACOS_GROUP: SEATA_GROUP

    depends_on:
      mysql:
        condition: service_healthy
      nacos-server:
        condition: service_healthy
    restart: always
    networks:
      - mall-network

  # Zipkin 链路追踪
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: mall-zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      - MYSQL_TCP_PORT=3306
      - MYSQL_DB=zipkin
      - MYSQL_USER=root
      - MYSQL_PASS=root
    depends_on:
      - mysql
    restart: always
    networks:
      - mall-network

  # Prometheus 监控
  prometheus:
    image: prom/prometheus:latest
    container_name: mall-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: always
    networks:
      - mall-network

  # Grafana 监控面板
  grafana:
    image: grafana/grafana:latest
    container_name: mall-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: always
    networks:
      - mall-network

networks:
  mall-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql-data:
  redis-data:
  elasticsearch-data:
  minio-data: